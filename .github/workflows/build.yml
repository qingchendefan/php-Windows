name: Build OpenTranslator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Windows executable
        run: |
          pyinstaller --noconfirm --onefile --windowed ^
            --name "OpenTranslator" ^
            --icon "icon.ico" ^
            --add-data "icon.ico;." ^
            --add-data "icon.png;." ^
            --add-data "translator.py;." ^
            --hidden-import "PyQt6.QtCore" ^
            --hidden-import "PyQt6.QtGui" ^
            --hidden-import "PyQt6.QtWidgets" ^
            --hidden-import "PyQt6.QtNetwork" ^
            --hidden-import "PyQt6.QtWebEngineCore" ^
            --hidden-import "PyQt6.QtWebEngineWidgets" ^
            --collect-all "PyQt6" ^
            --collect-all "PyQt6-Qt6" ^
            --collect-all "PyQt6-sip" ^
            --collect-all "PyQt6-WebEngine" ^
            "run.py"

      - name: Create release assets
        run: |
          mkdir release
          copy dist\OpenTranslator.exe release\
          copy icon.ico release\
          copy README_Windows.md release\README.md

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenTranslator-Windows
          path: release/

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build macOS application
        run: |
          chmod +x build_mac.sh
          ./build_mac.sh

      - name: Create release assets
        run: |
          mkdir -p release
          cp -r dist/OpenTranslator.app release/
          cp icon.icns release/
          cp README.md release/

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenTranslator-macOS
          path: release/

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: OpenTranslator-Windows
          path: windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v3
        with:
          name: OpenTranslator-macOS
          path: macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: OpenTranslator Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/OpenTranslator.exe
          asset_name: OpenTranslator.exe
          asset_content_type: application/x-msdownload

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/OpenTranslator.app
          asset_name: OpenTranslator.app.zip
          asset_content_type: application/zip
